<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DnDAssistant.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <!--Order is important-->
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkRedBrush}"/>
    </Style>

    <ImageBrush x:Key="AppIconImage" ImageSource="/DnDAssistant.Wpf;component/app.ico" Stretch="Uniform"/>

    <Style TargetType="{x:Type ListView}" x:Key="FadedListView">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <!--Top Gradient-->
                        <Border Panel.ZIndex="2" VerticalAlignment="Top" Height="20">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#fff5f5f5" Offset="0"/>
                                    <GradientStop Color="#00f5f5f5" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <!--Content-->
                        <ScrollContentPresenter Panel.ZIndex="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        
                        <!--Bottom Gradient-->
                        <Border Panel.ZIndex="2" VerticalAlignment="Bottom" Height="20">
                            <Border.Background>
                                <LinearGradientBrush>

                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="5 0 "/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="0"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{StaticResource DarkRedBrush}"
                            BorderThickness="0 0 0 0.5"
                            >
                        <Border.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick" 
                                          Command="{Binding OpenCampaign}"
                                          CommandParameter="{Binding}"
                                          />
                        </Border.InputBindings>
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Ellipse x:Name="cirkel"
                                     Width="45" 
                                     Height="45" 
                                     Grid.Column="0" 
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Stroke="{StaticResource DarkRedBrush}"
                                     StrokeThickness="2"
                                     SnapsToDevicePixels="True"
                                     Panel.ZIndex="5"
                                     >
                                <Ellipse.Fill>
                                    <ImageBrush Stretch="Fill" ImageSource="{Binding ImageURI}"/>
                                </Ellipse.Fill>
                            </Ellipse>

                            <Ellipse x:Name="underlay"
                                     Width="45" 
                                     Height="45" 
                                     Grid.Column="0" 
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Fill="White"
                                     Panel.ZIndex="4"
                                     SnapsToDevicePixels="True"
                                     />

                            <TextBlock Text="{Binding Name}" 
                                       Grid.Column="1"
                                       TextWrapping="NoWrap"
                                       FontFamily="{StaticResource Regular}"
                                       FontSize="{StaticResource FontsizeLarge}"
                                       Foreground="{StaticResource BlackBrush}"
                                       TextTrimming="CharacterEllipsis"
                                       Margin="10 0 0 0"
                                       VerticalAlignment="Center"
                                       ToolTip="{Binding Description}"
                                       ToolTipService.InitialShowDelay="1000"
                                       />

                            <Button x:Name="button"
                                    Grid.Column="2"
                                    Visibility="{Binding ShowDeleteButton, Converter={local:BooleanToVisibilityConverter}}"
                                    FontFamily="{StaticResource FontAwasome}"
                                    Content="{StaticResource FontAwesomeCrossIcon}"
                                    Style="{StaticResource RoundOkButton}"
                                    Height="35"
                                    Opacity="0"
                                    Command="{Binding DeleteCampaign}"
                                    CommandParameter="{Binding}"
                                    />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.15" To="{StaticResource LightRed}" AccelerationRatio="0.9" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="cirkel"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="48" AccelerationRatio="0.9" Storyboard.TargetProperty="Height" Storyboard.TargetName="cirkel"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="48" AccelerationRatio="0.9" Storyboard.TargetProperty="Width" Storyboard.TargetName="cirkel"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="48" AccelerationRatio="0.9" Storyboard.TargetProperty="Height" Storyboard.TargetName="underlay"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="48" AccelerationRatio="0.9" Storyboard.TargetProperty="Width" Storyboard.TargetName="underlay"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="1" AccelerationRatio="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="button"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.15" To="{StaticResource DarkRed}" AccelerationRatio="0.9" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="cirkel"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="45" AccelerationRatio="0.9" Storyboard.TargetProperty="Height" Storyboard.TargetName="cirkel"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="45" AccelerationRatio="0.9" Storyboard.TargetProperty="Width" Storyboard.TargetName="cirkel"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="45" AccelerationRatio="0.9" Storyboard.TargetProperty="Height" Storyboard.TargetName="underlay"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="45" AccelerationRatio="0.9" Storyboard.TargetProperty="Width" Storyboard.TargetName="underlay"/>
                                        <DoubleAnimation Duration="0:0:0.15" To="0" AccelerationRatio="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="button"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers> 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.15" To="{StaticResource LightRed}" AccelerationRatio="0.9" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.15" To="Transparent" AccelerationRatio="0.9" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="{StaticResource Bold}"/>
        <Setter Property="FontSize" Value="{StaticResource FontsizeLarge}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
                                    Width="30" 
                                    Height="30" 
                                    CornerRadius="0" 
                                    Background="{StaticResource SmokeWhiteBrush}"
                                    BorderThickness="2"
                                    BorderBrush="{StaticResource DarkRedBrush}">
                                <Path Width="16" Height="16" 
                                      x:Name="CheckMark"
                                      SnapsToDevicePixels="False" 
                                      Stroke="{StaticResource BlackBrush}"
                                      StrokeThickness="2"
                                      Data="M 0 0 L 16 16 M 0 16 L 16 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,2"
                                          VerticalAlignment="Bottom"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#ffc52e21" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#ff6d1a13" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Background="{StaticResource SmokeWhiteBrush}"
                            BorderBrush="{StaticResource BronzeBrush}"
                            Cursor="Hand"
                            BorderThickness="1">
                        <ItemsControl ItemsSource="{Binding ContextMenu}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Padding="10 4" Background="{StaticResource SmokeWhiteBrush}" x:Name="border">

                                        <Grid Height="23">

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <!-- Icon if given -->
                                            <Border Grid.Row="0"
                                                    BorderBrush="{StaticResource RedBrush}"
                                                    BorderThickness="0 0 1 0"
                                                    Visibility="Collapsed"
                                                    Margin="0 0 3 0"
                                                    Width="20"
                                                    />

                                            <TextBlock Text="{Binding Text}"
                                                       Grid.Column="1"
                                                       VerticalAlignment="Center"
                                                       />

                                        </Grid>

                                        <Border.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" 
                                                          Command="{Binding Click}" 
                                                          CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ItemsControl}}"/>
                                        </Border.InputBindings>

                                        <Border.Triggers>
                                            <EventTrigger RoutedEvent="MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation To="{StaticResource White}" DecelerationRatio="0.9" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation To="{StaticResource SmokeWhite}" DecelerationRatio="0.9" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Border.Triggers>

                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>