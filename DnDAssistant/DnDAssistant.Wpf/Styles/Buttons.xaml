<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DnDAssistant.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <!--Order is important-->
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Base button style-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BronzeBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            >
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"
                                   FontSize="{StaticResource FontsizeRegular}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.15" To="{StaticResource Burgundy}" AccelerationRatio="0.9" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.15" To="{StaticResource Bronze}" AccelerationRatio="0.9" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- General icon button style -->
    <Style x:Key="IconButtonStyle" TargetType="Button" >
        
    </Style>

    <!-- Icon style for the window buttons (i.e. minimize) -->
    <Style x:Key="WindowIconButtonStyle" TargetType="Button">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwasome}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontsizeSmall}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"
                                   FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="2"
                                          Direction="270"
                                          Color="{StaticResource White}"
                                          Opacity="1"
                                          BlurRadius="10"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowIconCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowIconButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="2"
                                          Direction="270"
                                          Color="{StaticResource White}"
                                          Opacity="1"
                                          BlurRadius="10"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Icon style for the dialog window buttons -->
    <Style x:Key="DialogIconButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowIconButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Opacity" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BronzeBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- The application name in the header button -->
    <Style x:Key="ApplicationMenuButton" TargetType="Button" BasedOn="{StaticResource WindowIconButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}"
                                   FontSize="{StaticResource FontsizeExtraLarge}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>